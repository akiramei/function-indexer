# Function Index Report

Generated: {{generatedAt}}

## Summary

- **Total Functions**: {{summary.totalFunctions}}
- **High Complexity**: {{summary.highComplexity}}
- **Missing Types**: {{summary.missingTypes}}
- **Average Complexity**: {{summary.avgComplexity}}

## Complexity Distribution

| Risk Level | Count | Percentage |
|------------|-------|------------|
| ðŸŸ¢ Low | {{distribution.low}} | {{distribution.lowPercent}}% |
| ðŸŸ¡ Medium | {{distribution.medium}} | {{distribution.mediumPercent}}% |
| ðŸ”´ High | {{distribution.high}} | {{distribution.highPercent}}% |

## Top Issues

{{#if violations}}
### Functions Exceeding Thresholds

{{#each violations}}
#### {{@index}}. `{{this.identifier}}` 
- **File**: `{{this.file}}:{{this.startLine}}`
- **Issues**:
{{#each this.issues}}
  - {{this}}
{{/each}}
{{/each}}
{{else}}
âœ… All functions are within quality thresholds!
{{/if}}

## Metrics Breakdown

### By File

| File | Functions | Avg Complexity | Max Complexity |
|------|-----------|----------------|----------------|
{{#each fileMetrics}}
| {{this.file}} | {{this.functionCount}} | {{this.avgComplexity}} | {{this.maxComplexity}} |
{{/each}}

## Recommendations

{{#if recommendations}}
{{#each recommendations}}
- {{this}}
{{/each}}
{{else}}
- Continue maintaining current code quality standards
- Consider adding more unit tests for complex functions
- Keep monitoring metrics as the codebase grows
{{/if}}

---

*Report generated by [function-indexer](https://github.com/akiramei/function-indexer)*