name: Function Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.ts'
      - '**.tsx'
      - 'package.json'
      - 'tsconfig.json'

jobs:
  analyze:
    name: Analyze Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for accurate diff
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install function-indexer globally
        run: npm install -g function-indexer
      
      - name: Run function analysis
        id: analysis
        run: |
          function-indexer ci \
            --base origin/${{ github.base_ref }} \
            --format github \
            --output ci-results.json \
            --comment
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
      
      - name: Post PR comment
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read the CI results
            let comment = '';
            try {
              const results = JSON.parse(fs.readFileSync('ci-results.json', 'utf8'));
              comment = results.comment || '## Function Analysis\n\nNo violations found! ✅';
            } catch (error) {
              comment = '## Function Analysis\n\n❌ Analysis failed. Please check the workflow logs.';
            }
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Function Indexer Quality Gate')
            );
            
            // Update or create comment
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
      
      - name: Upload analysis report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: function-analysis-report
          path: |
            ci-results.json
            .function-indexer/ci-index.jsonl